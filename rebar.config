%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% -------------------------------------------------------------------
%%
%% Copyright (c) 2016-2017 Basho Technologies, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

{brt, [
    protect,    % hand tuned, prevent unforced overwrite
    {upstream,  "https://github.com/eproxus/meck.git"}
]}.

{erl_opts, [
    % these will go away
    {platform_define, "^R", non_namespaced_types},  % used by meck
    {platform_define, "^[0-9]+", namespaced_types}, % used by hamcrest

    warn_export_vars,
    warn_shadow_vars,
    warn_obsolete_guard,
    warnings_as_errors
]}.

% BRT will detect `hamcrest' as a global dependency because of the way it's
% used if present, but it's not actually required unless hamcrest predicates
% are passed to meck.
% Hence, the dependency is limited to relevant profiles below.

{profiles, [
    {check, [
        {dialyzer, [
            {warnings, [
                error_handling,
                race_conditions,
                unknown,
                unmatched_returns
            ]},
            {plt_extra_apps, [
                hamcrest
            ]}
        ]},
        {erl_opts, [
            debug_info,
            warn_export_all,
            warn_unused_import,
            {d, 'BASHO_CHECK'}
        ]},
        {xref_checks, [
            deprecated_function_calls,
            deprecated_functions,
            locals_not_used,
            undefined_function_calls,
            undefined_functions
        ]},
        {deps, [
            {hamcrest,
                {git, "https://github.com/basho/hamcrest-erlang.git",
                {branch, "master"} }}
        ]},
        {overrides, [
            {add, hamcrest, [{erl_opts, [debug_info]}]}
        ]}
    ]},

    {docs, [
        {edoc_opts, [
            {app_default, "http://www.erlang.org/doc/man"},
            {preprocess, true},
            {macros, [
                {'EDOC', true},
                {'BASHO_DOCS', true}
            ]}
        ]}
    ]},

    {prod, [
        {erl_opts, [
            warn_export_all,
            warn_unused_import,
            {d, 'BASHO_PROD'}
        ]}
    ]},

    {test, [
        {cover_enabled, true},
        {erl_opts, [
            % this will go away
            {platform_define, "^R(?!16B03)", cover_empty_compile_opts},

            debug_info,
            nowarn_deprecated_function,
            nowarn_unused_function,
            {d, 'BASHO_TEST'}
        ]},
        {eunit_opts, [
            verbose
        ]},
        {deps, [
            {hamcrest,
                {git, "https://github.com/basho/hamcrest-erlang.git",
                {branch, "master"} }}
        ]},
        {overrides, [
            {add, hamcrest, [{erl_opts, [debug_info]}]}
        ]}
    ]},

    {validate, [
        {erl_opts, [
            strong_validation,
            warn_export_all,
            warn_missing_spec,
            warn_untyped_record,
            warn_unused_import,
            {d, 'BASHO_VALIDATE'}
        ]}
    ]}
]}.

{plugins, [
    {basho_rebar_tools,
        {git, "https://github.com/basho/basho_rebar_tools.git",
        {branch, "master"} }}
]}.
